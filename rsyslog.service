#!/bin/bash
#
# rsyslogforwarder        Starts rsyslogd/rklogd forwarder.
#
#
# description: Syslog is the facility by which many daemons use to log \
# messages to various system log files.  It is a good idea to always \
# run rsyslog.
### BEGIN INIT INFO
# Short-Description: Enhanced system logging and kernel message trapping daemons
# Description: Rsyslog is an enhanced multi-threaded syslogd supporting, 
#              among others, MySQL, syslog/tcp, RFC 3195, permitted 
#              sender lists, filtering on any message part, and fine 
#              grain output format control.
### END INIT INFO
#set -x

PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"
DAEMON="/sbin/rsyslogd"

# Source function library.
. /etc/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

if [ "$(tr '[:upper:]' '[:lower:]' <<< $NETWORKING)" == "no" ]; then
   echo "Network is set to OFF!"
   exit 1
fi

# Check DAEMON availablity
if ! [ -f $DAEMON ]; then
  echo "unable to find binary: $DAEMON to launch service"
  exit 1
fi

if ! [ -x $DAEMON ]; then
  echo "$DAEMON is not executable"
  exit 1
fi

NAME="rsyslog"
VERSION="$(cat /$NAME.version| cut -d'-' -f1)"
PIDFILE="/var/run/$NAME.pid"
DEFAULTS="/etc/default/$NAME"
CONF="/etc/$NAME.conf"
LOCKFILE=/var/lock/subsys/$NAME

# Source config
if [ -f /etc/sysconfig/$NAME ] ; then
    . /etc/sysconfig/$NAME
fi

if [ -f /etc/$NAME.conf ];then
  OPTION_CMDLINE="-f $CONF"
fi

if [ -z $SYSLOGD_CMDLINE ];then
  OPTION_CMDLINE="$SYSLOGD_CMDLINE $OPTION_CMDLINE"
fi

# See how we were called.
case "$1" in
  start)
        echo " Starting $NAME $VERSION: "
        $DAEMON -i "$PIDFILE" $OPTION_CMDLINE
        RETVAL=$?
        if [ $RETVAL -eq 0 ]; then
           touch "$LOCKFILE"
           # pgrep "$DAEMON" > "$PIDFILE"
           echo -en "\033[1A"
           success
           echo -en "\033[1B"
        else
           echo -en "\033[1A"
           failure
           echo -en "\033[1B"
        fi
        ;;
  stop)
        if test "x$(pgrep -f $DAEMON)" != x; then
            echo " Shutting down $NAME $VERSION: "
            if [ -f  $PIDFILE ]; then
           	  kill "$(cat $PIDFILE)"
	          else
	            kill "$(pgrep -f $DAEMON)"
            fi
            RETVAL=$?
        else
            echo "$NAME is not running."
            RETVAL=0
        fi

        RETVAL=$?
        if [ $RETVAL -eq 0 ]; then
           rm -f $LOCKFILE $PIDFILE
           echo -en "\033[1A"
           success
           echo -en "\033[1B"
        else
           echo -en "\033[1A"
           failure
           echo -en "\033[1B"
        fi
        ;;
  status)
        if test "x$(pgrep -f $DAEMON)" != x; then
            echo " $NAME is running: "
            RETVAL=0
        else
            echo "$NAME is not running."
            RETVAL=1
        fi
        ;;
  restart|reload)
        $0 stop
        $0 start
        RETVAL=$?
        ;;
  condrestart)
            if test "x$(pgrep -f $DAEMON)" != x; then
                $0 stop
                $0 start
                RETVAL=$?
            fi
            ;;
  *)
        echo "Usage: $0 {start|stop|restart|reload|condrestart|status}"
        exit 1
esac

exit $RETVAL
